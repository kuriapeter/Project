"""Initial migration

Revision ID: 2ae278dd1ab3
Revises: bc77718cd309
Create Date: 2025-03-17 18:56:08.844613

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '2ae278dd1ab3'
down_revision = 'bc77718cd309'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('performance_metrics')
    op.drop_table('leave_records')
    op.drop_table('work_logs')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('resource_type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('resource_id', sa.String(length=50), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('ip_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=45),
               nullable=True)
        batch_op.alter_column('timestamp',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.drop_column('endpoint')

    with op.batch_alter_table('budgets', schema=None) as batch_op:
        batch_op.drop_index('category')
        batch_op.drop_column('id')

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.drop_constraint('departments_ibfk_1', type_='foreignkey')
        batch_op.drop_column('manager_id')

    with op.batch_alter_table('payroll', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employee_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('salary_amount', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.drop_constraint('payroll_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('payroll_ibfk_2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['employee_id'], ['id'])
        batch_op.drop_column('amount')
        batch_op.drop_column('user_id')
        batch_op.drop_column('department_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('users_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'departments', ['department_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('first_name')
        batch_op.drop_column('last_name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=False))
        batch_op.add_column(sa.Column('first_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('users_ibfk_1', 'departments', ['department_id'], ['id'])

    with op.batch_alter_table('payroll', schema=None) as batch_op:
        batch_op.add_column(sa.Column('department_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('amount', mysql.FLOAT(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('payroll_ibfk_2', 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key('payroll_ibfk_1', 'departments', ['department_id'], ['id'])
        batch_op.drop_column('notes')
        batch_op.drop_column('salary_amount')
        batch_op.drop_column('employee_id')

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('manager_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('departments_ibfk_1', 'users', ['manager_id'], ['id'])

    with op.batch_alter_table('budgets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.create_index('category', ['category'], unique=True)

    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('endpoint', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False))
        batch_op.alter_column('timestamp',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('ip_address',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=45),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.drop_column('resource_id')
        batch_op.drop_column('resource_type')

    op.create_table('work_logs',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('employee_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('clock_in', mysql.DATETIME(), nullable=False),
    sa.Column('clock_out', mysql.DATETIME(), nullable=True),
    sa.Column('break_duration', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('overtime_minutes', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('notes', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name='work_logs_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('leave_records',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('employee_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('leave_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=False),
    sa.Column('start_date', sa.DATE(), nullable=False),
    sa.Column('end_date', sa.DATE(), nullable=False),
    sa.Column('status', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=20), nullable=True),
    sa.Column('approved_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('notes', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], name='leave_records_ibfk_1'),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name='leave_records_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('performance_metrics',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('employee_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('evaluation_date', sa.DATE(), nullable=False),
    sa.Column('productivity_score', mysql.FLOAT(), nullable=True),
    sa.Column('quality_score', mysql.FLOAT(), nullable=True),
    sa.Column('attendance_score', mysql.FLOAT(), nullable=True),
    sa.Column('goals_achieved', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('evaluator_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('notes', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name='performance_metrics_ibfk_1'),
    sa.ForeignKeyConstraint(['evaluator_id'], ['users.id'], name='performance_metrics_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
